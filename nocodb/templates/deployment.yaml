apiVersion: v1
kind: ServiceAccount
metadata:
  name: sts-nocodb
  namespace: nocodb-{{ .Values.image.environment }}
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.serviceaccount.service_account_role }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nocodb
  namespace: nocodb-{{ .Values.image.environment }}
spec:
  selector:
    matchLabels:
      app: nocodb
  replicas: {{ .Values.image.replica_number }}
  template:
    metadata:
      labels:
        app: nocodb
      annotations:
        github.release_version: "{{ .Values.image.release_version }}"      
    spec:
      serviceAccountName: sts-nocodb
      nodeSelector:
        eks.amazonaws.com/nodegroup: "{{ .Values.image.nodegroups_name }}"
      containers:
      - name: nocodb
        image: "{{ .Values.image.ecr_repository }}:{{ .Values.image.image_tag }}"
        env:
          {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
          {{- end }}
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: service-nocodb
  namespace: nocodb-{{ .Values.image.environment }}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: nocodb
  selector:
    app: nocodb

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nocodb
  namespace: nocodb-{{ .Values.image.environment }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: 'k8s-nocodb-{{ .Values.image.environment }}'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: TCP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '8'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/listen-ports: '8080'
    alb.ingress.kubernetes.io/tags: Environment={{ .Values.image.environment }},Team=develop
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-nocodb
            port:
              number: 8080